"use strict";$(function(){var t=$("#gameBoard"),e=$(".boxP1"),i=$(".boxP2"),n=t.width()-e.width(),o=t.height()-i.height(),a={},h=20,l=[],r=[],d=200,u=200,c=30,g=2,p=!1,s=$("audio")[0],f=$("audio")[1],x=$("audio")[2],m=$("audio")[3],y=$("audio")[4],w=6e4;!function(){$("input[type=range]").eq(0).on("change",function(t){w=$(t.target).val(),console.log("gametime is now ",w),$(".value").text("Your game will last "+w/1e3+" seconds")})}(),$("#start").click(function(){function t(t,e,i){var l=parseInt(t,10)-(a[e]?h:0)+(a[i]?h:0);return 65===e?l<0?0:l>n?n:l:87===e?l<0?0:l>o?o:l:void 0}function v(t,e,i){var l=parseInt(t,10)-(a[e]?h:0)+(a[i]?h:0);return 37===e?l<0?0:l>n?n:l:38===e?l<0?0:l>o?o:l:void 0}function b(){for(var t=1;t<g;){var e=(Math.random()*($("#gameBoard").width()-20)).toFixed(),i=(Math.random()*($("#gameBoard").height()-20)).toFixed();$('<div class="goldenball"></div>').css({left:e+"px",top:i+"px"}).appendTo("#gameBoard").clone().delay(2e3).fadeIn(100),t++,y.play()}}function B(t,e){return!(t.y+t.height<e.y||t.y>e.y+e.height||t.x+t.width<e.x||t.x>e.x+e.width)}function M(t,e){return!(t.y+t.height<e.y||t.y>e.y+e.height||t.x+t.width<e.x||t.x>e.x+e.width)}function C(t,e){return!(t.y+t.height<e.y||t.y>e.y+e.height||t.x+t.width<e.x||t.x>e.x+e.width)}function I(t,e){return!(t.y+t.height<e.y||t.y>e.y+e.height||t.x+t.width<e.x||t.x>e.x+e.width)}function T(t,e){return!(t.y+t.height<e.y||t.y>e.y+e.height||t.x+t.width<e.x||t.x>e.x+e.width)}function F(t,e){return!(t.y+t.height<e.y||t.y>e.y+e.height||t.x+t.width<e.x||t.x>e.x+e.width)}function k(t,e){return!(t.y+t.height<e.y||t.y>e.y+e.height||t.x+t.width<e.x||t.x>e.x+e.width)}function P(t,e){return!(t.y+t.height<e.y||t.y>e.y+e.height||t.x+t.width<e.x||t.x>e.x+e.width)}function W(){l.length>r.length?$(".showWinner").text("Player One Wins"):l.length<r.length?$(".showWinner").text("Player Two Wins"):$(".showWinner").text("It's a draw")}function D(){0===O?(clearTimeout(q),$(".gameScreen").remove(),$("#gameOverDiv").removeClass("noshow"),W()):(S.innerHTML=O+" seconds remaining",O--)}console.log("start clicked"),$("#welcomePage").hide(),$(".gameScreen").removeAttr("id","hidden"),$("#mute-button").each(function(){$(this).data("original",$(this).html())}).on("click",function(){$(this).toggleClass("clicked").html(function(t,e){var i=$(this).data("original");return e===i?'<i class="fa fa-volume-off" aria-hidden="true"></i>':i})}),$("#mute-button").on("click",function(){p=!p}),function(){for(var t=1;t<d;){var e=(Math.random()*($("#gameBoard").width()-20)).toFixed(),i=(Math.random()*($("#gameBoard").height()-20)).toFixed();$('<div class="ball"</div>').css({left:e+"px",top:i+"px"}).appendTo("#gameBoard").clone().delay(2e3).fadeIn(100),t++}}(),function(){for(var t=1;t<c;){var e=(Math.random()*($("#gameBoard").width()-20)).toFixed(),i=(Math.random()*($("#gameBoard").height()-20)).toFixed();$('<div class="bigBall"></div>').css({left:e+"px",top:i+"px"}).appendTo("#gameBoard").clone().delay(2e3).fadeIn(100),t++}}(),function(){for(var t=1;t<u;){var e=(Math.random()*($("#gameBoard").width()-20)).toFixed(),i=(Math.random()*($("#gameBoard").height()-20)).toFixed();$('<div class="badball"></div>').css({left:e+"px",top:i+"px"}).appendTo("#gameBoard").clone().delay(2e3).fadeIn(100),t++}}(),setTimeout(function(){b()},Math.floor(Math.random()*(w-1e4))),$(window).keydown(function(n){a[n.which]=!0;var o={x:e.position().left,y:e.position().top,width:e.width(),height:e.height()},h={x:i.position().left,y:i.position().top,width:i.width(),height:i.height()};$(".badball").each(function(t,e){var i={x:$(e).position().left,y:$(e).position().top,width:$(e).width(),height:$(e).height()};C(o,i)&&($("#p1Counter").html(function(t,e){return e-1}),$(e).remove(),l.pop(),p||x.play()),I(h,i)&&($("#p2Counter").html(function(t,e){return e-1}),$(e).remove(),r.pop(),p||x.play())}),$(".ball").each(function(t,e){var i={x:$(e).position().left,y:$(e).position().top,width:$(e).width(),height:$(e).height()};B(o,i)&&($("#p1Counter").html(function(t,e){return+e+1}),$(e).remove(),l.push("ball"),p||s.play()),M(h,i)&&($("#p2Counter").html(function(t,e){return+e+1}),$(e).remove(),r.push("ball"),p||s.play())}),$(".bigBall").each(function(t,e){var i={x:$(e).position().left,y:$(e).position().top,width:$(e).width(),height:$(e).height()};T(o,i)&&($("#p1Counter").html(function(t,e){return+e+2}),$(e).remove(),l.push("ball","ball2"),p||f.play()),F(h,i)&&($("#p2Counter").html(function(t,e){return+e+2}),$(e).remove(),r.push("ball","ball2"),p||f.play())}),$(".goldenball").each(function(t,e){var i={x:$(e).position().left,y:$(e).position().top,width:$(e).width(),height:$(e).height()};k(o,i)&&($("#p1Counter").html(function(t,e){return+e+10}),$(e).remove(),l.push("ball","ball2","ball3","ball4","ball5","ball6","ball7","ball8","ball9","ball10"),p||m.play()),P(h,i)&&($("#p2Counter").html(function(t,e){return+e+10}),$(e).remove(),r.push("ball","ball2","ball3","ball4","ball5","ball6","ball7","ball8","ball9","ball10"),p||m.play())}),e.css({left:function(e,i){return t(i,65,68)},top:function(e,i){return t(i,87,83)}}),i.css({left:function(t,e){return v(e,37,39)},top:function(t,e){return v(e,38,40)}})}),$(window).keyup(function(t){a[t.which]=!1});var O=w/1e3,S=document.getElementById("countDownTimer"),q=setInterval(D,1e3)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,

"use strict";$(function(){var t=$("#gameBoard"),i=$(".boxP1"),e=$(".boxP2"),n=t.width()-i.width(),o=t.height()-e.height(),a={},h=20,r=[],l=[],d=300,u=200,c=50,p=2,s=!1,g=$("audio")[0],f=$("audio")[1],m=$("audio")[2],x=$("audio")[3],y=$("audio")[4],w=$("audio")[5],v=6e4;!function(){$("input[type=range]").eq(0).on("change",function(t){v=$(t.target).val(),console.log("gametime is now ",v),$(".value").text("Your game will last "+v/1e3+" seconds")})}();var b=!1;$(".icon1").click(function(){!1===b?($("#popupBackground").fadeIn("fast","swing"),b=!0):!0===b&&($("#popupBackground").fadeOut("fast","swing"),b=!1)}),$("#popupBackground").hide(),$(".icon1").each(function(){$(this).data("original",$(this).html())}).on("click",function(){$(this).toggleClass("clicked").html(function(t,i){var e=$(this).data("original");return i===e?'<i class="fa fa-times-circle" aria-hidden="true"></i>':e})}),$("#mute-button").on("click",function(){s=!s}),$("#mute-button").each(function(){$(this).data("original",$(this).html())}).on("click",function(){$(this).toggleClass("clicked").html(function(t,i){var e=$(this).data("original");return i===e?'<i class="fa fa-volume-off" aria-hidden="true"></i>':e})}),$("#start").click(function(){function t(t,i,e){var r=parseInt(t,10)-(a[i]?h:0)+(a[e]?h:0);return 65===i?r<0?0:r>n?n:r:87===i?r<0?0:r>o?o:r:void 0}function b(t,i,e){var r=parseInt(t,10)-(a[i]?h:0)+(a[e]?h:0);return 37===i?r<0?0:r>n?n:r:38===i?r<0?0:r>o?o:r:void 0}function B(){for(var t=1;t<p;){var i=(Math.random()*($("#gameBoard").width()-20)).toFixed(),e=(Math.random()*($("#gameBoard").height()-20)).toFixed();$('<div class="goldenball"></div>').css({left:i+"px",top:e+"px"}).appendTo("#gameBoard"),t++,s||y.play()}}function k(t,i){return!(t.y+t.height<i.y||t.y>i.y+i.height||t.x+t.width<i.x||t.x>i.x+i.width)}function C(t,i){return!(t.y+t.height<i.y||t.y>i.y+i.height||t.x+t.width<i.x||t.x>i.x+i.width)}function M(t,i){return!(t.y+t.height<i.y||t.y>i.y+i.height||t.x+t.width<i.x||t.x>i.x+i.width)}function T(t,i){return!(t.y+t.height<i.y||t.y>i.y+i.height||t.x+t.width<i.x||t.x>i.x+i.width)}function F(t,i){return!(t.y+t.height<i.y||t.y>i.y+i.height||t.x+t.width<i.x||t.x>i.x+i.width)}function I(t,i){return!(t.y+t.height<i.y||t.y>i.y+i.height||t.x+t.width<i.x||t.x>i.x+i.width)}function P(t,i){return!(t.y+t.height<i.y||t.y>i.y+i.height||t.x+t.width<i.x||t.x>i.x+i.width)}function W(t,i){return!(t.y+t.height<i.y||t.y>i.y+i.height||t.x+t.width<i.x||t.x>i.x+i.width)}function O(){r.length>l.length?$(".showWinner").text("Player One Wins"):r.length<l.length?$(".showWinner").text("Player Two Wins"):$(".showWinner").text("It's a draw")}function D(){q.innerHTML=S+" seconds remaining",0===--S&&(clearTimeout(A),$(".gameScreen").remove(),$("#gameOverDiv").removeClass("noshow"),O(),s||w.play())}$("#welcomePage").hide(),$(".gameScreen").removeAttr("id","hidden"),function(){for(var t=1;t<d;){var i=(Math.random()*($("#gameBoard").width()-20)).toFixed(),e=(Math.random()*($("#gameBoard").height()-20)).toFixed();$('<div class="ball"</div>').css({left:i+"px",top:e+"px"}).appendTo("#gameBoard"),t++}}(),function(){for(var t=1;t<c;){var i=(Math.random()*($("#gameBoard").width()-20)).toFixed(),e=(Math.random()*($("#gameBoard").height()-20)).toFixed();$('<div class="bigBall"></div>').css({left:i+"px",top:e+"px"}).appendTo("#gameBoard"),t++}}(),function(){for(var t=1;t<u;){var i=(Math.random()*($("#gameBoard").width()-20)).toFixed(),e=(Math.random()*($("#gameBoard").height()-20)).toFixed();$('<div class="badball"></div>').css({left:i+"px",top:e+"px"}).appendTo("#gameBoard"),t++}}(),setTimeout(function(){B()},Math.floor(Math.random()*(v-1e4))),$(window).keydown(function(n){a[n.which]=!0;var o={x:i.position().left,y:i.position().top,width:i.width(),height:i.height()},h={x:e.position().left,y:e.position().top,width:e.width(),height:e.height()};$(".badball").each(function(t,i){var e={x:$(i).position().left,y:$(i).position().top,width:$(i).width(),height:$(i).height()};M(o,e)&&($("#p1Counter").html(function(t,i){return i-1}),$(i).remove(),r.pop(),s||m.play()),T(h,e)&&($("#p2Counter").html(function(t,i){return i-1}),$(i).remove(),l.pop(),s||m.play())}),$(".ball").each(function(t,i){var e={x:$(i).position().left,y:$(i).position().top,width:$(i).width(),height:$(i).height()};k(o,e)&&($("#p1Counter").html(function(t,i){return+i+1}),$(i).remove(),r.push("ball"),s||g.play()),C(h,e)&&($("#p2Counter").html(function(t,i){return+i+1}),$(i).remove(),l.push("ball"),s||g.play())}),$(".bigBall").each(function(t,i){var e={x:$(i).position().left,y:$(i).position().top,width:$(i).width(),height:$(i).height()};F(o,e)&&($("#p1Counter").html(function(t,i){return+i+2}),$(i).remove(),r.push("ball","ball2"),s||f.play()),I(h,e)&&($("#p2Counter").html(function(t,i){return+i+2}),$(i).remove(),l.push("ball","ball2"),s||f.play())}),$(".goldenball").each(function(t,i){var e={x:$(i).position().left,y:$(i).position().top,width:$(i).width(),height:$(i).height()};P(o,e)&&($("#p1Counter").html(function(t,i){return+i+10}),$(i).remove(),r.push("ball","ball2","ball3","ball4","ball5","ball6","ball7","ball8","ball9","ball10"),s||x.play()),W(h,e)&&($("#p2Counter").html(function(t,i){return+i+10}),$(i).remove(),l.push("ball","ball2","ball3","ball4","ball5","ball6","ball7","ball8","ball9","ball10"),s||x.play())}),i.css({left:function(i,e){return t(e,65,68)},top:function(i,e){return t(e,87,83)}}),e.css({left:function(t,i){return b(i,37,39)},top:function(t,i){return b(i,38,40)}})}),$(window).keyup(function(t){a[t.which]=!1});var S=v/1e3,q=document.getElementById("countDownTimer"),A=setInterval(D,1e3)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
